# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d6e18d5c-f29f-4d9b-b6b0-c6fc2b0b74dd";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-label/_esp";
      fsType = "vfat";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-label/chromeos-home";
      fsType = "ext4";
    };

  environment.systemPackages = [ pkgs.cifs-utils ];
  fileSystems."/home/jo/Public" =
    { device = "//dietpi.local/shared";
      fsType = "cifs";
      options = #pkgs.lib.concatStringsSep ","
        [ "x-systemd.automount" "noauto" "x-systemd.idle-timeout=60"
          "x-systemd.device-timeout=5s" "x-systemd.mount-timeout=5s"
          "user" "users" ];
    };

  swapDevices = [
    { device = "/dev/disk/by-label/chromeos-swap"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
